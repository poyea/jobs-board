{"version":3,"sources":["webpack:///./src/components/Badge.jsx","webpack:///./src/components/Job.jsx","webpack:///./src/pages/job.jsx","webpack:///./src/components/Page.jsx"],"names":["badgeSymbols","badgeExplanation","Badge","type","className","role","aria-label","Job","job","undefined","console","log","badges","map","badge","key","percentOSS","to","id","entity","title","percentTime","deadline","location","url","classNmae","href","dangerouslySetInnerHTML","__html","description","pageContext","Page","children"],"mappings":"kIAEMA,EAAe,CACnB,QAAW,KACX,WAAY,MAGRC,EAAmB,CACvB,QAAW,uCACX,WAAY,sDAcCC,EAXD,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACZ,yBAAKC,UAAU,SACb,0BAAMC,KAAK,MAAMC,aAAYH,GACzBH,EAAaG,GACf,0BAAMC,UAAU,WACZH,EAAiBE,OCoCZI,IAhDH,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACb,YAAYC,IAARD,GACFE,QAAQC,IAAI,kDACL,mDAGP,yBAAKP,UAAU,OACb,yBAAKA,UAAU,UACXI,EAAII,QACJJ,EAAII,OAAOC,KAAI,SAACC,GAAD,OACb,kBAAC,EAAD,CAAOC,IAAKD,EAAOX,KAAMW,OAGP,MAAnBN,EAAIQ,YACL,kBAAC,EAAD,CAAOb,KAAK,cAGhB,kBAAC,IAAD,CAAMc,GAAE,QAAUT,EAAIU,IACpB,yBAAKd,UAAU,SAAUI,EAAIW,OAA7B,MAA0CX,EAAIY,QAEhD,yBAAKhB,UAAU,QACb,yBAAKA,UAAU,eAAf,eAAyC,2BAAKI,EAAIa,YAAT,KAAzC,UACA,yBAAKjB,UAAU,cACb,2BAAKI,EAAIQ,WAAT,KADF,uBACgD,0CADhD,KAGER,EAAIc,UACJ,yBAAKlB,UAAU,YAAf,yBACwB,2BAAKI,EAAIc,WAGjCd,EAAIe,UACJ,yBAAKnB,UAAU,YAAf,aACcI,EAAIe,UAGlBf,EAAIgB,KACJ,yBAAKC,UAAU,OAAf,QACO,uBAAGC,KAAMlB,EAAIgB,KAAOhB,EAAIgB,OAInC,yBACEpB,UAAU,cACVuB,wBAAyB,CAACC,OAAQpB,EAAIqB,kB,oCChD9C,oEAkBerB,UAVH,YAAsB,IACxBA,EADuB,EAAlBsB,YACLtB,IACR,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,IAAKA,IADZ,aAEY,kBAAC,IAAD,CAAMS,GAAG,KAAT,gBAFZ,O,kCCXJ,qCAgBec,IAbF,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACX,yBAAK5B,UAAU,QACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,UACb,kBAAC,IAAD,CAAMa,GAAG,KACP,qDAGFe","file":"component---src-pages-job-jsx-3877b4f827a20fbc3c24.js","sourcesContent":["import React from \"react\";\n\nconst badgeSymbols = {\n  'Sponsor': '🚀',\n  'Pure OSS': '🍏',\n};\n\nconst badgeExplanation = {\n  'Sponsor': 'This entity is a sponsor of NumFOCUS',\n  'Pure OSS': 'This jobs entails working on Open Source full time'\n};\n\nconst Badge = ({ type }) => (\n  <div className=\"badge\">\n    <span role=\"img\" aria-label={type}>\n      { badgeSymbols[type] }\n      <span className=\"tooltip\">\n        { badgeExplanation[type] }\n      </span>\n    </span>\n  </div>\n);\n\nexport default Badge;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport Badge from \"./Badge\";\n\nconst Job = ({ job }) => {\n  if (job === undefined) {\n    console.log(\"We don't expect an empty job posting; aborting\");\n    return <div>Empty job posting</div>;\n  }\n  return (\n    <div className=\"job\">\n      <div className=\"badges\">\n        { job.badges &&\n          job.badges.map((badge) =>\n            <Badge key={badge} type={badge}/>\n          )\n        }\n        { (job.percentOSS === 100) &&\n          <Badge type=\"Pure OSS\"/>\n        }\n      </div>\n      <Link to={`/job/${job.id}`}>\n        <div className=\"title\">{ job.entity } / { job.title }</div>\n      </Link>\n      <div className=\"meta\">\n        <div className=\"percentTime\">This job is <b>{ job.percentTime }%</b> time.</div>\n        <div className=\"percentOSS\">\n          <b>{ job.percentOSS }%</b> of that time is on <b>open source</b>.\n        </div>\n        { job.deadline &&\n          <div className=\"deadline\">\n            Application deadline: <b>{ job.deadline }</b>\n          </div>\n        }\n        { job.location &&\n          <div className=\"location\">\n            Location: { job.location }\n          </div>\n        }\n        { job.url &&\n          <div classNmae=\"url\">\n            URL: <a href={job.url}>{ job.url }</a>\n          </div>\n        }\n      </div>\n      <div\n        className=\"description\"\n        dangerouslySetInnerHTML={{__html: job.description}}\n      />\n    </div>\n  );\n};\nexport default Job;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport Page from '../components/Page';\nimport Job from '../components/Job';\n\n// pageContext comes from createPage in\n// gatsby-node.esm.js\nconst job = ({ pageContext }) => {\n  const { job } = pageContext;\n  return (\n    <Page>\n      <Job job={job}/>\n      Return to <Link to=\"/\">jobs listing</Link>.\n    </Page>\n  );\n};\n\nexport default job;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst Page = ({ children }) => (\n  <div className=\"page\">\n    <div className=\"content\">\n      <div className=\"header\">\n        <Link to=\"/\">\n          <h1>NumFOCUS Jobs Board</h1>\n        </Link>\n      </div>\n      { children }\n    </div>\n  </div>\n);\n\nexport default Page;\n"],"sourceRoot":""}